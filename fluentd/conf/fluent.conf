<system>
  log_level debug
</system>

<source>
  @type tail
  tag docker.waf
  path /var/log/modsec/modsec_audit.log
  pos_file /var/log/modsec/modsec_audit.log.pos
  <parse>
    @type json
    keep_time_key true
  </parse> 
</source>

<source>
  @type tail
  tag docker.traefik
  path /var/log/traefik/access.log
  pos_file /var/log/traefik/access.log.pos
  <parse>
    @type json
    keep_time_key true
  </parse> 
</source>

<match @FLUENT_LOG>
  @type null
</match>

<filter docker.waf>
  @type record_transformer
  enable_ruby
  <record>
    sourceIP ${record["transaction"]["remote_address"]}
    sourcePORT ${record["transaction"]["remote_port"]}
    severity ${record["audit_data"]["messages"][0].scan(/\[severity \"(.*?)\"\]/).first.compact[0]}
    message ${record["audit_data"]["messages"][0].scan(/\[msg \"(.*?)\"\]/).first.compact[0]}
    data ${record["audit_data"]["messages"][0].scan(/\[data \"(.*?)\"\]/).first.compact[0]}
    tags ${record["audit_data"]["messages"][0].scan(/\[tag \"(.*?)\"\]/).flatten}
    time ${Time.strptime(record["transaction"]["time"], '%d/%b/%Y:%H:%M:%S.%N %z').iso8601}
    ContainerName waf
  </record>
  remove_keys audit_data, transaction, response
</filter>

<filter docker.traefik>
  @type record_transformer
  enable_ruby
  <record>
    ContainerName traefik
  </record>
</filter>

<filter docker.**>
  @type stdout
</filter>

<match docker.**>
  @type splunk_hec
  hec_host "#{ENV['HUMIO_URL']}"
  hec_port 443
  hec_token "#{ENV['HUMIO_TOKEN']}"
  <buffer>
    @type               memory
    flush_mode          interval
    flush_interval      2
    flush_thread_count  2
    overflow_action     block
    retry_forever       true
  </buffer>
</match>